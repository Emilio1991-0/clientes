import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

// EJERCICIO REALIZADO POR JAVIER ROELAS Y EMILIO GUTIÉRREZ
public class main {
	
	public static void muestraErrorSQL(SQLException e) {
	    System.err.println("SQL ERROR mensaje: " + e.getMessage());
	    System.err.println("SQL Estado: " + e.getSQLState());
	    System.err.println("SQL código específico: " + e.getErrorCode());
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String basedatos = "";
	    String host = "localhost";
	    String port = "3306";
	    String parAdic = "?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
	    String urlConnection = "jdbc:mysql://" + host + ":" + port + "/" + basedatos + parAdic;
	    String user = "";
	    String pwd = "";

	    try (	Connection c = DriverManager.getConnection(urlConnection, user, pwd);
	            Statement s = c.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
	            ResultSet rs = s.executeQuery("SELECT * FROM CLIENTES")) {

	    	int i = 1;
	      	rs.next();
	        System.out.println("[" + (i) + "]");        
	        System.out.println("DNI: " + rs.getString("DNI"));
	        System.out.println("Apellidos: " + rs.getString("APELLIDOS"));
	        System.out.println("CP: " + rs.getString("CP"));
	        
	        Scanner teclado = new Scanner(System.in);
	        
	        boolean fin = false;
	        String entrada;
	        
	        while(!fin) {
	        	
	        	System.out.println();
	        	System.out.println("Introduzca el número de fila para visualizar, 'd' para ver la fila anterior, 'k' para ver la siguiente fila o '.' para finalizar el programa.");
	        	entrada = teclado.nextLine();
	        	
	        	switch(entrada) {
	        	
		        	case "d":
		        		if(!rs.isFirst()) {
		        			rs.previous();
		        			i--;
		        			System.out.println("[" + (i) + "]");        
		        	        System.out.println("DNI: " + rs.getString("DNI"));
		        	        System.out.println("Apellidos: " + rs.getString("APELLIDOS"));
		        	        System.out.println("CP: " + rs.getString("CP"));
		        		} else {
		        			System.out.println("No hay filas antes de la actual.");
		        		}
		        	break;
		        	
		        	case "k":
		        		if(!rs.isLast()) {
		        			rs.next();
		        			i++;
		        			System.out.println("[" + (i) + "]");        
		        	        System.out.println("DNI: " + rs.getString("DNI"));
		        	        System.out.println("Apellidos: " + rs.getString("APELLIDOS"));
		        	        System.out.println("CP: " + rs.getString("CP"));
		        		} else {
		        			System.out.println("No hay filas después de la actual.");
		        		}
		        	break;
		        	
		        	case ".":
		        		fin = true;
		        		c.close();
		        		rs.close();
		        	break;
		        	
		        	default:
		        		try {
			        		if(rs.absolute(Integer.parseInt(entrada)))
			        		{
			        			i = Integer.parseInt(entrada);
				        		System.out.println("[" + (i) + "]");        
				        	    System.out.println("DNI: " + rs.getString("DNI"));
				        	    System.out.println("Apellidos: " + rs.getString("APELLIDOS"));
				        	    System.out.println("CP: " + rs.getString("CP"));
			        		}
			        		else {
			        			System.out.println("Error");
			        		}
		        		} catch (NumberFormatException e) {
	        				System.out.println("Opción no válida");
	        			}
	        	}
	        	
	        }
	        
	    } catch (SQLException e) {
	      muestraErrorSQL(e);
	    } catch (Exception e) {
	      e.printStackTrace(System.err);
	    } 
	    
	}
}
